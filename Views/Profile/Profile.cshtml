@model ProjectMVC.DTO.UserDto

<div class="container mx-auto mt-[6rem] mb-16 flex justify-center">
    @if (User.Identity?.IsAuthenticated == true)
    {
        <div class="max-w-md w-full">
            @if (Model != null)
            {
                <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-6 text-center">@(Model.Name ?? "User")</h1>
                <form asp-controller="Profile" asp-action="EditProfile" method="post" enctype="multipart/form-data" id="profileForm">
                    <div class="flex flex-col items-center mb-8">

                        <div class="flex-shrink-0 relative group mb-6">
                            <label for="ProfilePictureIForm" class="cursor-pointer">
                                <img id="profileImage" src="@Model.ProfilePicture" class="h-48 w-48 rounded-full object-cover" />
                                <div class="absolute inset-0 bg-black bg-opacity-50 rounded-full flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity cursor-pointer">
                                    <span class="text-white text-sm">Change Picture</span>
                                </div>
                            </label>
                            <input type="file" id="ProfilePictureIForm" name="ProfilePictureIForm" class="hidden" accept="image/*" />
                        </div>

                        <!-- Rest of the form fields -->
                        <div class="w-full space-y-4">
                            <div class="space-y-2">
                                <label for="Name" class="block text-sm font-semibold text-gray-600 dark:text-gray-300">Name</label>
                                <input 
                                    type="text" 
                                    id="Name" 
                                    name="Name"
                                    value="@(Model.Name ?? "")" 
                                    class="w-full px-4 py-2 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500"
                                />
                            </div>
                            <div class="space-y-2">
                                <label for="Email" class="block text-sm font-semibold text-gray-600 dark:text-gray-300">Email</label>
                                <input 
                                    type="email" 
                                    id="Email" 
                                    name="Email"
                                    value="@(Model.Email ?? "")" 
                                    class="w-full px-4 py-2 rounded-md border border-gray-300 dark:border-gray-600 bg-gray-200 dark:bg-gray-800 text-gray-900 dark:text-white"
                                    readonly
                                />
                            </div>
                        </div>
                    </div>
                    <!-- Password change fields and submit button -->
                    <div class="mt-8">
                        <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">Change Password</h2>
                        <div class="space-y-4">
                            <div class="space-y-2">
                                <label for="OldPassword" class="block text-sm font-semibold text-gray-600 dark:text-gray-300">Old Password</label>
                                <input 
                                    type="password" 
                                    id="OldPassword" 
                                    name="OldPassword"
                                    class="w-full px-4 py-2 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500"
                                />
                            </div>
                            <div class="space-y-2">
                                <label for="Password" class="block text-sm font-semibold text-gray-600 dark:text-gray-300">New Password</label>
                                <input 
                                    type="password" 
                                    id="Password" 
                                    name="Password"
                                    class="w-full px-4 py-2 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500"
                                />
                            </div>
                            <div class="space-y-2">
                                <label for="ConfirmPassword" class="block text-sm font-semibold text-gray-600 dark:text-gray-300">Confirm New Password</label>
                                <input 
                                    type="password" 
                                    id="ConfirmPassword" 
                                    name="ConfirmPassword"
                                    class="w-full px-4 py-2 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500"
                                />
                            </div>
                        </div>
                    </div>
                    <div class="mt-8">
                        <button type="submit" class="w-full px-6 py-2 bg-gray-700 text-white rounded-md hover:bg-gray-800 transition-colors dark:bg-white dark:text-gray-700 dark:hover:bg-gray-100">
                            Save Changes
                        </button>
                    </div>
                </form>
            }
            else
            {
                <p class="text-xl text-gray-600 dark:text-gray-400">Unable to load user data. Please try again later.</p>
            }
        </div>
    }
    else
    {
        <div class="text-center max-w-md w-full">
            <p class="text-xl text-gray-600 dark:text-gray-400">Please log in to view your profile.</p>
        </div>
    }
</div>

@if (!ViewData.ModelState.IsValid)
{
<div id="validation-summary" class="fixed top-[0.4rem] left-1/2 transform -translate-x-1/2 -translate-y-full opacity-0 z-50 max-w-md rounded-lg bg-red-500 p-4 text-center text-white shadow-lg transition-all duration-500 ease-out font-bold">
        @Html.ValidationSummary(false)
</div>
}

<!-- Displays message if something successful in backend happens -->
@if (ViewBag.SuccessMessage != null)
{
	<div id="validation-summary" 
		 class="fixed top-[0.4rem] left-1/2 transform -translate-x-1/2 -translate-y-full opacity-0 z-50 w-auto max-w-screen rounded-lg p-4 text-center shadow-lg transition-all duration-500 ease-out font-bold @(TempData["MessageType"] as string == "login" ? "bg-gray-100 text-black" : "bg-green-500 text-white")">
		@ViewBag.SuccessMessage
	</div>
}

<script>

document.addEventListener('DOMContentLoaded', function() {
    const profilePictureInput = document.getElementById('ProfilePictureIForm');
    const profileImage = document.getElementById('profileImage');
    const form = document.getElementById('profileForm');

    if (profilePictureInput && profileImage) {
        profilePictureInput.addEventListener('change', function(event) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    profileImage.src = e.target.result;
                }
                reader.readAsDataURL(file);
            }
        });
    }
});
    document.addEventListener('DOMContentLoaded', () => {
        const validationSummary = document.getElementById('validation-summary');

		if (validationSummary) {
			// Trigger fade-in and slide-down into position
			setTimeout(() => {
				validationSummary.classList.remove('opacity-0', '-translate-y-full');
				validationSummary.classList.add('opacity-100', 'translate-y-0');
			}, 50); // Slight delay for smoother start

			// Stay visible, then fade out and slide further down
			setTimeout(() => {
				validationSummary.classList.remove('opacity-100', 'translate-y-0');
				validationSummary.classList.add('opacity-0', '-translate-y-full');

				setTimeout(() => validationSummary.remove(), 500); // Remove after fade-out
			}, 4000);
		}
    });
</script>
